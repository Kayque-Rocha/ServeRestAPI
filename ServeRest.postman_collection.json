{
	"info": {
		"_postman_id": "6e155c38-8632-418b-8011-64cf976f26fe",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38376946"
	},
	"item": [
		{
			"name": "Geração de Massa",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code 200\", function () {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"console.log(pm.response.json(). results[0].name.first);\r",
									"pm.globals.set(\"UserName\", pm.response.json(). results[0].name.first)\r",
									"pm.globals.set(\"UserEmail\", pm.response.json(). results[0].email)\r",
									"pm.globals.set(\"UserPassword\", pm.response.json(). results[0].login.password)\r",
									"\r",
									"   "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuário",
			"item": [
				{
					"name": "Novo Cadastro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar Status Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar Mensagem\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Cadastro realizado com sucesso\")\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Capturar Id\", function () {\r",
									"    pm.globals.set(\"userId\", pm.response.json()._id)\r",
									"});\r",
									"\r",
									"pm.test(\"Schema é valído\", function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schema'))).to.be.true\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\",\r",
									"    \"_id\"\r",
									"  ]\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"{{UserName}}\",\r\n    \"email\": \"{{UserEmail}}\",\r\n    \"password\": \"{{UserPassword}}\",\r\n    \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuario pelo Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code, contrato, validar se o Id retornado foi o solicitado, validar o email\r",
									"\r",
									"//Status Code\r",
									"pm.test(\"Validar Status 200\", function(){\r",
									"    pm.response.to.have.status (200)\r",
									"})\r",
									"\r",
									"//Validar Id\r",
									"console.log(pm.globals.get(\"userId\"));\r",
									"console.log(pm.response.json()._id)\r",
									"pm.test(\"Validação de Id\", function() {\r",
									"    pm.expect(pm.response.json()._id).to.be.eql(pm.globals.get(\"userId\"))\r",
									"})\r",
									"\r",
									"//Validar Email\r",
									"console.log(pm.response.json().email)\r",
									"console.log(pm.globals.get(\"UserEmail\"))\r",
									"pm.test(\"Validar Email\", function() {\r",
									"    pm.expect(pm.response.json().email).to.be.eql(pm.globals.get(\"UserEmail\"))\r",
									"})\r",
									"\r",
									"//Validar Contrato\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"nome\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"email\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"password\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"administrador\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_id\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"nome\",\r",
									"    \"email\",\r",
									"    \"password\",\r",
									"    \"administrador\",\r",
									"    \"_id\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Validação de Contrato', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									" });\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/usuarios/{{userId}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update de usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function (){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem alterada com sucesso\", function(){\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro alterado com sucesso\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cont",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"{{UserName}}\",\r\n    \"email\": \"{{UserEmail}}\",\r\n    \"password\": \"{{UserPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/usuarios/{{userId}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário atualizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function(){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Validar usuario como ADM\", function(){\r",
									"    pm.expect(pm.response.json().administrador).to.be.eql(\"true\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/usuarios/{{userId}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar usuário da base",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function(){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Validar exclusão\", function(){\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro excluído com sucesso\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/usuarios/{{userId}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}